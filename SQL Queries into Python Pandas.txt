df = read_csv('customers.csv')

select * from customers;
df

select custID from customers LIMIT 7;
df.head(7)

select custID from df where Transaction_Dollars = 397; 
df[df.Transaction_Dollars == 397].CustID

select ... where Transaction_Dollars < 397 AND Product_Count <=10;
df[(df.Transaction_Dollars < 397) & (df.Product_Count <=10)]

select CustID, Transaction_Dollars ... where Transaction_Dollars >= 250 AND Product_Count > 16;
df[(df.Transaction_Dollars >= 250) & (df.Product_Count > 16)][["CustID", "Transaction_Dollars"]]

select max(age), min(age), mean(age) from customers;
df.agg({
'Age': [''max', 'min', 'mean']
  })
  
  select DISTINCT username from customers;
  df.username.unique()
  
select * from customers where Age >= 40 order by custID;
df[df.Age >= 40].sort_values('custID')
df[df.Age >= 40].sort_values('custID', ascending=False)
df[df.Age >= 50].sort_values('Spending_Score_1_to_100')[['Age', 'CustomerID','Annual_Income_K_Dollars']]

select Age, Genre, count(*) from customers group by Genre, Age;
df.groupby(['Age', 'Genre']).size().to_frame('Count')  # to_frame('Count') to give a name to the count column(1,2,3,4,...) 
df.groupby(['Age', 'Genre']).size().to_frame('Count').reset_index()
## Sort values
df.groupby(['Age', 'Genre']).size().to_frame('COUNT').sort_values('Genre') 

select Age, count(*) from customers groupby Age having count(*) < 3;
df.groupby(['Age']).filter(lambda g: len(g) < 3).groupby('Age').size()  ## having count(*) < 3 == lambda g: len(g) < 3



select * from customers where Age in (11,22,55,44)
df[df.Age.isin([22,33,44])]
df[df.Age.isin([22,33,44])][['Genre', 'Age', "Annual_Income_K_Dollars"]]

select * from customers where Age not in (11,22,55,44)
df[~df.Age.isin([22,33,44])][['Genre', 'Age', "Annual_Income_K_Dollars"]]

select * from customers order by Age desc limit 10;
df.nlargest(10, columns='Age')

select * from customers order by Age desc limit 10 offset 10;
df.nlargest(10, columns='Age').tail(10)

file2 = "Shop_Customers.csv";filename2 = path + file2;df2 = pd.read_csv(filename2);df2

select * from customers where Annual_Income_K_Dollars > 50 union all select * from shop_customers  where Annual_Income_K_Dollars < 45;
pd.concat([df[df.Annual_Income_K_Dollars > 50], df2[df2.Annual_Income_K_Dollars < 45]])
pd.concat([df[df.Annual_Income_K_Dollars > 50], df2[df2.Annual_Income_K_Dollars < 45]]).drop_duplicates()

select * from customers c join transactions t on c.CustomerID = t.CustID where c.Genre = Female
df.merge(df3[df.Genre == 'Female'],left_on='CustomerID', right_on='CustID',how='inner')

insert into customers values(111, 23, 'QWERTY');
cust = df.append(custmerID=123123,Genre='Male',Age=33);

update customers set CustomerID = 000 where sales>=10;
df.loc.df['Sales'] == 10, CustomerID' == 000;  

delete from customers where Age = 7
df.drop(df[df.Age = 7].index)



